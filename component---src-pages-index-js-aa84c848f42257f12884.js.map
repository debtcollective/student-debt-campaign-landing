{"version":3,"sources":["webpack:///./src/components/message/index.js","webpack:///./src/components/form/index.js","webpack:///./src/components/modal/index.js","webpack:///./src/pages/index.js","webpack:///./src/style/theme.js","webpack:///./src/style/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout/index.js"],"names":["StyledLink","styled","a","withConfig","displayName","componentId","theme","colors","red","Title","h1","black","breakpoints","sm","md","lg","xl","xxl","Message","_ref","onLinkClick","react_default","createElement","onClick","propTypes","PropTypes","func","StyledForm","form","FormGroup","div","Label","label","white","Input","input","darkGrey","Button","button","ResultMessage","Form","state","email","msg","disabled","handleSubmit","_callee","event","response","regenerator_default","wrap","_context","prev","next","preventDefault","_this","abrupt","setState","addToMailchimp","sent","t0","stop","handleChange","target","value","render","this","onSubmit","action","method","type","placeholder","onChange","dangerouslySetInnerHTML","__html","Component","ReactModal","setAppElement","StyledReactModal","props","lib_default","ModalBody","h2","Close","Modal","isOpen","onRequestClose","aria-hidden","modal_Title","components_form","bool","IndexPage","showModal","hideModal","Fragment","layout","seo","message","modal","beige","grey","green","__webpack_require__","d","__webpack_exports__","style_theme","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","shape","string","isRequired","SEO","description","lang","meta","site","_public_static_d_4279492693_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","name","content","property","image","url","twitterUsername","concat","defaultProps","arrayOf","object","StaticQueryContext","createContext","StaticQuery","Consumer","staticQueryData","query","children","GlobalStyle","createGlobalStyle","_templateObject","Layout","gatsby_browser_entry_StaticQuery","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-aa84c848f42257f12884.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nimport { theme } from \"../../style\"\n\nconst StyledLink = styled.a`\n  color: ${theme.colors.red};\n  cursor: pointer;\n  text-decoration: underline;\n`\n\nconst Title = styled.h1`\n  color: ${theme.colors.black};\n  font-family: \"More Gothic Bold\";\n  font-size: 7rem;\n  margin: 0;\n  text-align: center;\n\n  @media (min-width: ${theme.breakpoints.sm}) {\n    font-size: 10rem;\n  }\n\n  @media (min-width: ${theme.breakpoints.md}) {\n    font-size: 14rem;\n  }\n\n  @media (min-width: ${theme.breakpoints.lg}) {\n    font-size: 18rem;\n  }\n\n  @media (min-width: ${theme.breakpoints.xl}) {\n    font-size: 20rem;\n  }\n\n  @media (min-width: ${theme.breakpoints.xxl}) {\n    font-size: 24rem;\n  }\n`\n\nconst Message = ({ onLinkClick }) => (\n  <Title>\n    THE END OF\n    <br />\n    STUDENT DEBT\n    <br />\n    IS <StyledLink onClick={onLinkClick}>HERE</StyledLink>!\n  </Title>\n)\n\nMessage.propTypes = {\n  onLinkClick: PropTypes.func,\n}\n\nexport default Message\n","import React, { Component } from \"react\"\nimport addToMailchimp from \"gatsby-plugin-mailchimp\"\nimport styled from \"styled-components\"\n\nimport { theme } from \"../../style\"\n\nconst StyledForm = styled.form`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`\n\nconst FormGroup = styled.div`\n  align-items: flex-end;\n  display: flex;\n  width: 100%;\n\n  @media (max-width: 585px) {\n    flex-direction: column;\n  }\n`\n\nconst Label = styled.label`\n  color: ${theme.colors.white};\n  font-family: \"Libre Franklin\", sans-serif;\n  font-size: 2.4rem;\n  width: 100%;\n`\nconst Input = styled.input`\n  border-radius: 4px;\n  border: 1px solid ${theme.colors.darkGrey};\n  color: ${theme.colors.black};\n  font-family: \"Libre Franklin\", sans-serif;\n  font-size: 4rem;\n  height: 80px;\n  padding: 1rem 2rem;\n  width: 100%;\n  margin-top: 1rem;\n\n  @media (max-width: ${theme.breakpoints.lg}) {\n    font-size: 2.5rem;\n    height: 60px;\n  }\n`\n\nconst Button = styled.button`\n  background-color: ${theme.colors.darkGrey};\n  border-radius: 4px;\n  border: 0;\n  color: ${theme.colors.white};\n  cursor: pointer;\n  font-family: \"Libre Franklin\", sans-serif;\n  font-size: 2.6rem;\n  font-weight: bold;\n  height: 80px;\n  margin-left: 25px;\n  padding: 0 5rem;\n  text-transform: uppercase;\n\n  &:hover {\n    background-color: ${theme.colors.darkGrey};\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.75;\n  }\n\n  @media (max-width: ${theme.breakpoints.lg}) {\n    font-size: 1.6rem;\n    height: 60px;\n  }\n\n  @media (max-width: 585px) {\n    margin-top: 1rem;\n    width: 100%;\n    margin-left: 0;\n  }\n`\n\nconst ResultMessage = styled.div`\n  color: ${theme.colors.white};\n  margin-top: 1rem;\n  font-size: 2rem;\n  width: 100%;\n\n  a {\n    color: ${theme.colors.white};\n  }\n`\n\nclass Form extends Component {\n  state = {\n    email: \"\",\n    msg: \"\",\n    disabled: false,\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault()\n\n    const { email } = this.state\n\n    if (!email) {\n      return false\n    }\n\n    // disable submit button\n    this.setState({ disabled: true })\n\n    try {\n      const response = await addToMailchimp(email)\n      const { msg } = response\n\n      this.setState({\n        msg,\n      })\n    } catch (error) {\n      this.setState({\n        msg:\n          \"There was an error while adding your email to our list, please reload and try again.\",\n      })\n    }\n\n    // enable submit button\n    this.setState({ disabled: false })\n  }\n\n  handleChange = event => {\n    this.setState({ email: event.target.value })\n  }\n\n  render() {\n    const { disabled } = this.state\n\n    return (\n      <StyledForm onSubmit={this.handleSubmit} action=\"\" method=\"post\">\n        <FormGroup>\n          <Label>\n            Email address\n            <Input\n              type=\"email\"\n              placeholder=\"address@email.com\"\n              value={this.state.email}\n              onChange={this.handleChange}\n              disabled={disabled}\n            />\n          </Label>\n          <Button type=\"submit\">Join</Button>\n        </FormGroup>\n        <ResultMessage dangerouslySetInnerHTML={{ __html: this.state.msg }} />\n      </StyledForm>\n    )\n  }\n}\n\nexport default Form\n","import React from \"react\"\nimport ReactModal from \"react-modal\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nimport { theme } from \"../../style\"\nimport Form from \"../form\"\n\nReactModal.setAppElement(\"#___gatsby\")\n\nconst StyledReactModal = styled(props => <ReactModal {...props} />)`\n  align-items: center;\n  background-color: ${theme.colors.red};\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: center;\n  width: 100%;\n`\nStyledReactModal.displayName = \"StyledReactModal\"\n\nconst ModalBody = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: center;\n  max-width: 1180px;\n  padding: 2rem;\n`\n\nconst Title = styled.h2`\n  color: ${theme.colors.white};\n  font-family: \"More Gothic Bold\";\n  font-size: 25rem;\n  margin: 0;\n  text-align: center;\n\n  @media (max-width: ${theme.breakpoints.xl}) {\n    font-size: 16rem;\n  }\n\n  @media (max-width: ${theme.breakpoints.lg}) {\n    font-size: 12rem;\n  }\n\n  @media (max-width: 585px) {\n    font-size: 10rem;\n  }\n\n  @media (max-width: 485px) {\n    font-size: 7rem;\n  }\n`\n\nconst Close = styled.button`\n  background-color: transparent;\n  border: 0;\n  color: white;\n  cursor: pointer;\n  font-size: 12rem;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  right: 1.8rem;\n  top: 0;\n\n  @media (max-width: ${theme.breakpoints.xl}) {\n    font-size: 10rem;\n  }\n\n  @media (max-width: ${theme.breakpoints.lg}) {\n    font-size: 8rem;\n  }\n\n  @media (max-width: 585px) {\n    font-size: 6rem;\n  }\n`\n\nconst Modal = ({ isOpen, onRequestClose }) => (\n  <StyledReactModal isOpen={isOpen} onRequestClose={onRequestClose}>\n    <Close onClick={onRequestClose}>\n      <span aria-hidden=\"true\">&times;</span>\n    </Close>\n    <ModalBody>\n      <Title>Stay Updated</Title>\n      <Form />\n    </ModalBody>\n  </StyledReactModal>\n)\n\nModal.propTypes = {\n  isOpen: PropTypes.bool,\n  onRequestClose: PropTypes.func,\n}\n\nexport default Modal\n","import React, { Component } from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Message from \"../components/message\"\nimport Modal from \"../components/modal\"\nimport SEO from \"../components/seo\"\n\nclass IndexPage extends Component {\n  state = {\n    showModal: false,\n  }\n\n  showModal = () => {\n    this.setState({ showModal: true })\n  }\n\n  hideModal = () => {\n    this.setState({ showModal: false })\n  }\n\n  render() {\n    return (\n      <>\n        <Layout>\n          <SEO />\n          <Message onLinkClick={this.showModal} />\n          <Modal\n            isOpen={this.state.showModal}\n            onRequestClose={this.hideModal}\n          />\n        </Layout>\n      </>\n    )\n  }\n}\n\nexport default IndexPage\n","const theme = {\n  colors: {\n    beige: \"#FCFBF7\",\n    black: \"#000000\",\n    darkGrey: \"#4F4F4F\",\n    grey: \"#828282\",\n    red: \"#FF4630\",\n    white: \"#FFFFFF\",\n    green: \"#24BA9D\",\n  },\n  breakpoints: {\n    sm: \"425px\",\n    md: \"768px\",\n    lg: \"992px\",\n    xl: \"1200px\",\n    xxl: \"1600px\",\n  },\n}\n\nexport default theme\n","import \"../fonts\"\n\nexport { default as theme } from \"./theme\"\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            url\n            image\n            twitterUsername\n            facebookPage\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const title = site.siteMetadata.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `og:image`,\n          content: site.siteMetadata.image,\n        },\n        {\n          name: `og:url`,\n          content: site.siteMetadata.url,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.twitterUsername,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n        {\n          name: `twitter:image`,\n          content: site.siteMetadata.image,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { createGlobalStyle } from \"styled-components\"\nimport { theme } from \"../../style\"\n\nconst GlobalStyle = createGlobalStyle`\n  html,\n  body {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    height: 100%;\n    margin: 0;\n    width: 100%;\n  }\n\n  html {\n    box-sizing: border-box;\n    font-size: 62.5%;\n  }\n\n  body {\n    align-items: center;\n    background-color: ${theme.colors.beige};\n    display: flex;\n    font-size: 1.4rem;\n    justify-content: center;\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <GlobalStyle />\n        <main>{children}</main>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}