{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/pages/404.js","webpack:///./src/style/theme.js","webpack:///./src/style/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["GlobalStyle","createGlobalStyle","_templateObject","theme","colors","beige","Layout","_ref","children","react_default","a","createElement","gatsby_browser_entry","query","render","data","Fragment","_755544856","propTypes","PropTypes","node","isRequired","SEO","description","lang","meta","title","site","_2417117884","metaDescription","siteMetadata","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","string","arrayOf","object","NotFoundPage","layout","seo","black","darkGrey","grey","red","white","green","breakpoints","sm","md","lg","xl","xxl","__webpack_require__","d","__webpack_exports__","style_theme","m","module","exports","require","default","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-404-js-0cd77d01318b3c406036.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { createGlobalStyle } from \"styled-components\"\nimport { theme } from \"../style\"\n\nconst GlobalStyle = createGlobalStyle`\n  html,\n  body {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    height: 100%;\n    margin: 0;\n    width: 100%;\n  }\n\n  html {\n    box-sizing: border-box;\n    font-size: 62.5%;\n  }\n\n  body {\n    align-items: center;\n    background-color: ${theme.colors.beige};\n    display: flex;\n    font-size: 1.4rem;\n    justify-content: center;\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <GlobalStyle />\n        <main>{children}</main>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const theme = {\n  colors: {\n    beige: \"#FCFBF7\",\n    black: \"#000000\",\n    darkGrey: \"#4F4F4F\",\n    grey: \"#828282\",\n    red: \"#FF4630\",\n    white: \"#FFFFFF\",\n    green: \"#24BA9D\",\n  },\n  breakpoints: {\n    sm: \"425px\",\n    md: \"768px\",\n    lg: \"992px\",\n    xl: \"1200px\",\n    xxl: \"1600px\",\n  },\n}\n\nexport default theme\n","import \"../fonts\"\n\nexport { default as theme } from \"./theme\"\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}